pull したらやること　
　　Desktop
　
　　notePC sudo bundle install  :gem 'dotenv-rails'
          https://qiita.com/rarrrrsQ/items/1b1277499819659e5601


ログイン
    ・データ
        ・name
         ・add_check duplication

        ・Email
        ・add_check regex
        ・add_check duplication
　　・失敗
        ・失敗Validationを出す
        　・Dupulicate

　　・password
      
    ・Google

サインアップ　
　　・ユーザー名
　　・パスワード
　　・確認用パスワード　#一時的に使用。
　　・Google

    ・Google


ログイン後
　User custom
    ・自身のプロフィール画像を挙げれるようにする。
    　・なければデフォルトのまま。ログイン後に登録。

フロー
　・ログイン画面　
　　　・サインアップのリンク有

　・サインアップ画面
　　　・ログイン画面のリンク有
        ・NameとEmailにcustom validation message を設定。 User.rb
　　↓
　　・サインアップ後　NSSメンバーか確認画面
　　　　　・Yes ブログを作れる権限を付与
　　　　　　　　　ロール名　（部長(top_role)・副部長(sidetop_role)・NSSメンバー(member_role)）　：プルダウンで選択させる。

　　　　　・No　一般ユーザ
            　　ロール名（一般ユーザ General_role）
懸念事項
NSSメンバーのみがblogの編集、削除をできるようにする
　　NSSメンバー　：編集、削除
　　　　　NSSメンバーの自分のblogのみをいじる。

testdate
tarou@example.com
hogehoge

memo login
参考：https://qiita.com/d0ne1s/items/7c4d2be3f53e34a9dec7
$ rails g model User name:string email:string password_digest:string
      invoke  active_record
      create    db/migrate/20240530185552_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/models/user_test.rb
      create      test/fixtures/users.yml

$ rails db:migrate
== 20240530185552 CreateUsers: migrating ======================================
-- create_table(:users)
   -> 0.0040s
== 20240530185552 CreateUsers: migrated (0.0042s) =============================

/home/nishinekma/work/Rails/blog/db/migrate/20240530185552_create_users.rb



rails g controller Sessions new
      create  app/controllers/sessions_controller.rb
       route  get 'sessions/new'
      invoke  erb
      create    app/views/sessions
      create    app/views/sessions/new.html.erb
      invoke  test_unit
      create    test/controllers/sessions_controller_test.rb
      invoke  helper
      create    app/helpers/sessions_helper.rb
      invoke    test_unit

memo singup
https://www.geeksforgeeks.org/create-a-user-signup-form-with-email-using-ruby-on-rails/
https://zenn.dev/yusuke_docha/articles/89b49fd29c16c6#enum_help%E3%81%AE%E5%B0%8E%E5%85%A5



フィルターをかけてblog機能
　　General
          ・見る権限とコメントする権限を持つ。
          ・自身の作成したコメントを編集・削除する権限を持つ。
    admin1 
          ・signupした瞬間に 自身のblog の場所が作られる。
          ・作るごとに横に追加していく。　
          ・自身のブログの削除、編集、クリエイトの権限を持つ。
          ・コメントの削除の権限のみを持つ。
　　admin2 
          ・全てのblogの削除、追加、編集の権限を持つ。
          ・全てのコメント操作の権限をもつ。

    temprary memo:　GPTにより良いコードがないか聞く。（冗長の削除の提案
    　　　　　　　　 コードレビュー目的でしてもらう。

/---*改良の確認*---/
    #基本　改良　で検索。
    ・session_controller.rb

/---* todo *---/
.envファイルを使用する: パスワードなどの機密情報を含む.envファイルを作成し、アプリケーションからはこのファイルを読み取ります。.envファイルは通常、.gitignoreに含まれ、GitHubなどの公開リポジトリには含まれません。
この方法でいきます。

/---* google account login Management*---/
　開発参考サイト
      https://zenn.dev/yoiyoicho/articles/c44a80e4bb4515#%E6%84%9F%E6%83%B3 これがメイン


　　　Google での認証方法 
　　　・https://cloud.google.com/docs/authentication?hl=ja

      ・ユーザを認証するためのGoogle ID トークンの使用
　　　　https://cloud.google.com/endpoints/docs/openapi/authenticating-users-google-id?hl=ja

      ・google API Google::Auth::IDTokens
       https://www.rubydoc.info/github/google/google-auth-library-ruby/Google/Auth/IDTokens
　　　
      ・動画をみて概要が理解できる。（英語だが
       https://developers.google.com/identity/sign-in/web/backend-auth?hl=ja


 google API chage API料金について
 　・1day/10,000　回まで　
　　　https://cloud.google.com/api-gateway/pricing?hl=ja
   ・nssblog OAuth　同意がひつようなやつと　認証情報で許可できるURIカスタマイズ
      https://console.cloud.google.com/apis/credentials/consent?hl=ja&project=nssblog&supportedpurview=project
   ・NSS　クライアントID　等　audに設定する値
  　  https://console.cloud.google.com/apis/credentials/oauthclient/537001528197-mibeq2ma6aep3ismhd4buk6jjc62jd6t.apps.googleusercontent.com?hl=ja&project=nssblog&supportedpurview=project



google button custom doc 
https://developers.google.com/identity/gsi/web/reference/html-reference?hl=ja





User.find_by(email: "nishi.kazu2488@gmail.com")
User.where(email: "nishi.kazu2488@gmail.com").destroy_all
DBから削除
User.destroy_all
DB関連情報初期化　db init
bin/rails db:reset #db/migrate/seeds.rb で初期値で入力される値を設定する。


